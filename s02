# a. Count the total number of records in the sales_data RDD.
total_records = sales_data.count()

# b. Calculate the total sales amount from the amount field in the sales_data RDD.
total_sales_amount = sales_data.map(lambda x: float(x.split(",")[3])).sum()

# c. Find the maximum and minimum sales amount from the amount field in the sales_data RDD.
max_sales_amount = sales_data.map(lambda x: float(x.split(",")[3])).max()
min_sales_amount = sales_data.map(lambda x: float(x.split(",")[3])).min()

# d. Calculate the average sales amount from the amount field in the sales_data RDD.
total_sales = sales_data.map(lambda x: float(x.split(",")[3])).sum()
total_count = sales_data.count()
average_sales_amount = total_sales / total_count

# e. Collect the first 5 records of the sales_data RDD into the driver program.
first_5_records = sales_data.take(5)

# f. Reduce the sales_data RDD to find the total sales amount.
total_sales = sales_data.map(lambda x: float(x.split(",")[3])).reduce(lambda a, b: a + b)

# g. Take a random sample of 10% of the records from the sales_data RDD.
sample_data = sales_data.sample(False, 0.1)

# h. Fetch the top 5 records with the highest sales amount from the sales_data RDD.
top_5_sales_records = sales_data.takeOrdered(5, key=lambda x: -float(x.split(",")[3]))

# i. Check if there are any records in the sales_data RDD.
has_records = sales_data.isEmpty()
